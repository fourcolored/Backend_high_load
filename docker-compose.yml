version: '3'

services:

  # db:
  #   image: postgres
  #   volumes:
  #     - postgres:/var/lib/postgresql/data
  #   environment:
  #     POSTGRES_DB: store
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: postgres
  #   ports:
  #     - "5432:5432"

  web1:
    build: .
    command: python manage.py runserver 0.0.0.0:8000 #gunicorn midterm.wsgi:application --bind 0.0.0.0:8000
    restart: unless-stopped
    volumes:
      - .:/app
    ports:
      - "8000:8000" 
    depends_on:
      - rabbitmq
  
  web2:
    build: .
    command: python manage.py runserver 0.0.0.0:8001 #gunicorn midterm.wsgi:application --bind 0.0.0.0:8001
    restart: unless-stopped
    volumes:
      - .:/app
    ports:
      - "8001:8001" 
    depends_on:
      - rabbitmq

  web3:
    build: .
    command: python manage.py runserver 0.0.0.0:8002 #gunicorn midterm.wsgi:application --bind 0.0.0.0:8001
    restart: unless-stopped
    volumes:
      - .:/app
    ports:
      - "8002:8002" 
    depends_on:
      - rabbitmq

  redis:
    image: redis
    ports:
      - "6379:6379" 

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - web1
      - web2

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    expose:
      - "5672"
    environment:
      RABBITMQ_DEFAULT_VHOST: "/"
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
  
  celery:
    build: .
    command: celery -A midterm worker -l info
    volumes:
      - .:/code
    depends_on:
      - rabbitmq

volumes:
  postgres: 
  static:
  logs:

